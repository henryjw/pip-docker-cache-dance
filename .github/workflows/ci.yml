name: Build
on: push

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: demo
      - name: Cache cache-pip
        uses: tespkg/actions-cache@adf4e5e57e916ad83e63cc047ce271ef0843a24c
        id: cache-pip
        continue-on-error: false
        with:
          path: cache-pip
          key: ${{github.event.repository.name}}/cache-pip-demo-${{ hashFiles('Dockerfile') }}

          accessKey: ${{ vars.S3_ACCESS_KEY }}
          secretKey: ${{ secrets.S3_SECRET_KEY }}
          bucket: actions-cache-poc
          use-fallback: false
      - name: Output pip cache info
        uses: gacts/run-and-post-run@7aec950f3b114c4fcf6012070c3709ecff0eb6f8 # v1.4.0
        continue-on-error: true
        with:
          run: |
            echo "Size of cache dir before install: $(du -sh cache-pip)"
            echo "Cache contents before install: "
            ls -lah cache-pip
          post: |
            echo "Size of cache dir after install: $(du -sh cache-pip)"
            echo "Cache contents after install: "
            ls -lah cache-pip
      - name: inject cache-pip into docker
        uses: henryjw/buildkit-cache-dance@88b6d5ede39db47da3046392562cf0a2e351d51e
        with:
          cache-source: cache-pip
          cache-target: /root/.cache/pip
          skip-extraction: ${{ steps.cache-pip.outputs.cache-hit }}


      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
